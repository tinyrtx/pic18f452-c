////////////////////////////////////////////////////////////////////////////////
// tinyRTX Filename: tinyRTX-PIC16F877-c.lkr (tinyRTX PIC16F877 using C linker file)
//
// Copyright 2014 Sycamore Software, Inc.  ** www.tinyRTX.com **
// Distributed under the terms of the GNU Lesser General Purpose License v3
//
// This file is part of tinyRTX. tinyRTX is free software: you can redistribute
// it and/or modify it under the terms of the GNU Lesser General Public License
// version 3 as published by the Free Software Foundation.
//
// tinyRTX is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
// details.
//
// You should have received a copy of the GNU Lesser General Public License
// (filename copying.lesser.txt) and the GNU General Public License (filename
// copying.txt) along with tinyRTX.  If not, see <http://www.gnu.org/licenses/>.
//
// Revision history:
//  15Oct03  SHiggins@tinyRTX.com  	Add comments, rearrange for Project pd2p01.
//                					Deleted LIBPATH directive.
//                					Expanded from 16F872 to 16F877, added ICD space.
//  31Oct03  SHiggins@tinyRTX.com  	Extensive revisions for major reorganization.
//  28Jul14  SHiggins@tinyRTX.com  	Move .cinit to 0x2000 (unimplemented CODEPAGE).
//  13Aug14  SHiggins@tinyRTX.com  	Converted from PIC16F877 to PIC18F452.
//	22Aug14  SHiggins@tinyRTX.com  	Restored LIBPATH.
//									Added #IFDEF _CRUNTIME sections to support C language.
//									Added CODEPAGEs for idlocs, config, devid, eedata.
//  27Aug14  SHiggins@tinyRTX.com  	Cleanup, removed unused UAPP_UdataSec.
//
////////////////////////////////////////////////////////////////////////////////

LIBPATH  .

//
// Include C object files and libraries.
//
#IFDEF _CRUNTIME
  FILES c018i.o
  FILES clib.lib
  FILES p18f452.lib
#FI

////////////////////////////////////////////////////////////////////////////////
//
// Define code pages in ROM.
//
//  CODEPAGE   NAME=page       START=0x0               END=0x7FFF
//
CODEPAGE    NAME=p0_sisd_int_reset  START=0x0000    END=0x0007  PROTECTED   // 0x0008 locations.
CODEPAGE    NAME=p0_sisd_int_hi_pri START=0x0008    END=0x0017  PROTECTED   // 0x0010 locations.
CODEPAGE    NAME=p0_sisd_int_lo_pri START=0x0018    END=0x0027  PROTECTED   // 0x0010 locations. UNUSED
CODEPAGE    NAME=p0_srtx_general    START=0x0028    END=0x06ff              // 0x06d8 locations.
CODEPAGE    NAME=p0_srtx_tables     START=0x0700    END=0x07ff              // 0x0100 locations.
CODEPAGE    NAME=p1_user_tables     START=0x0800    END=0x08ff              // 0x0100 locations.
CODEPAGE    NAME=p1_user_general    START=0x0900    END=0x0fff              // 0x0700 locations.
CODEPAGE    NAME=p2_user_general    START=0x1000    END=0x17ff              // 0x0800 locations.
CODEPAGE    NAME=p3_user_general    START=0x1800    END=0x1fff              // 0x0800 locations.
CODEPAGE    NAME=px_unused    		START=0x2000    END=0x7dbf              // 0x0800 locations.
CODEPAGE   	NAME=px_debug	   		START=0x7dc0    END=0X7fff  PROTECTED	// 0x0240 locations. DEBUGGER
CODEPAGE   	NAME=idlocs   			START=0x200000  END=0x200007   PROTECTED
CODEPAGE   	NAME=config   			START=0x300000  END=0x30000D   PROTECTED
CODEPAGE   	NAME=devid    			START=0x3FFFFE  END=0x3FFFFF   PROTECTED
CODEPAGE   	NAME=eedata   			START=0xF00000  END=0xF000FF   PROTECTED
//
// Access RAM low = 0x0000-0x007f.
//
ACCESSBANK  NAME=accessram  START=0x0      END=0x7F
//
// General Purpose Registers.
//
// Bank 0 General Purpose 0x0080-0x00ff.
// Bank 1 General Purpose 0x0100-0x01ff.
// Bank 2 General Purpose 0x0200-0x02ff.
// Bank 3 General Purpose 0x0300-0x03ff.
// Bank 4 General Purpose 0x0400-0x04ff.
// Bank 5 General Purpose 0x0500-0x05f3.
// Bank 5 General Purpose 0x05f4-0x05ff.  (Reserved for Debugger.)
//
DATABANK    NAME=gpr0       START=0x0080    END=0x00FF				// Bank 0 GPR's.
DATABANK    NAME=gpr1       START=0x0100    END=0x01FF				// Bank 1 GPR's.
DATABANK    NAME=gpr2       START=0x0200    END=0x02FF				// Bank 2 GPR's.
DATABANK    NAME=gpr3       START=0x0300    END=0x03FF				// Bank 3 GPR's.
DATABANK    NAME=gpr4       START=0x0400    END=0x04FF				// Bank 4 GPR's.
DATABANK    NAME=gpr5       START=0x0500    END=0x05F3				// Bank 5 GPR's.
DATABANK    NAME=gpr5_debug START=0x05F4    END=0x05FF    PROTECTED	// Bank 5 GPR's. DEBUGGER
//
// Access RAM high = Bank 15 Special Function Registers 0x0f80-0x0fff.
//
ACCESSBANK  NAME=accesssfr  START=0xF80    END=0xFFF    PROTECTED
//
////////////////////////////////////////////////////////////////////////////////
//
// ROM code space.
//
// SRTX and supporting routines go at beginning of page 0.
//
SECTION    NAME=SISD_ResetVectorSec ROM=p0_sisd_int_reset   // Reset vector.
SECTION    NAME=SISD_IntVectorSec   ROM=p0_sisd_int_hi_pri  // Interrupt vector - high priority.
SECTION    NAME=SISD_IntCodeSec     ROM=p0_srtx_general  	// Interrupt handler.
SECTION    NAME=SISD_CodeSec        ROM=p0_srtx_general     // System Interrupt Service Director.
SECTION    NAME=SRTX_CodeSec        ROM=p0_srtx_general     // System Real Time eXecutive.
SECTION    NAME=SLCD_CodeSec        ROM=p0_srtx_general     // System LCD services.
SECTION    NAME=SI2C_CodeSec        ROM=p0_srtx_general     // System I2C services.     LINKNOTE: Place on same page as SI2C_TableSec.
SECTION    NAME=cinit               ROM=p0_srtx_general     // ROMDATA section. Placed by linker but not used.
SECTION    NAME=code               	ROM=p0_srtx_general     // p18f452.asm zeros memory. Placed by linker but not used.
SECTION    NAME=SI2C_TableSec       ROM=p0_srtx_tables      // System I2C lookup table.
SECTION    NAME=SUSR_CodeSec        ROM=p0_srtx_general     // SRTX - User interface.
SECTION    NAME=STRC_CodeSec        ROM=p0_srtx_general     // System Trace service.
//
// User application routines may use end of page 0 and everywhere else.
//
SECTION    NAME=TL_TableSec         ROM=p1_user_tables      // User Lookup tables.     
SECTION    NAME=ULCD_TableSec       ROM=p1_user_tables      // User LCD lookup tables.
SECTION    NAME=UI2C_TableSec       ROM=p1_user_tables      // User I2C lookup tables.
SECTION    NAME=ULCD_CodeSec        ROM=p1_user_general     // User LCD routines.      LINKNOTE: Place on same page as ULCD_TableSec.
SECTION    NAME=UI2C_CodeSec        ROM=p1_user_general     // User I2C routines.      LINKNOTE: Place on same page as UI2C_TableSec.
SECTION    NAME=UADC_CodeSec        ROM=p1_user_general     // User ADC routines.
SECTION    NAME=UAPP_CodeSec        ROM=p1_user_general     // Main user application.
SECTION    NAME=SM16_CodeSec        ROM=p2_user_general     // Math routines.
SECTION    NAME=SBCD_CodeSec        ROM=p2_user_general     // BCD conversion routines.
//
////////////////////////////////////////////////////////////////////////////////
//
// RAM data space.
//
// SISD context save variables must be in shared data space.  
//
SECTION    NAME=SISD_UdataAcsSec    RAM=accessram   // SISD context save.
//
// SRTX and supporting variables go at beginning of bank 0.
//
SECTION    NAME=SRTX_UdataSec       RAM=gpr0        // SRTX services. LINKNOTE: SRTX_UdataSec always in Bank 0.(?)
SECTION    NAME=SUSR_UdataSec       RAM=gpr0        // SRTX - User interface variables.  
SECTION    NAME=SLCD_UdataSec       RAM=gpr0        // System LCD services.           
SECTION    NAME=SI2C_UdataSec       RAM=gpr0        // System I2C services.           
SECTION    NAME=STRC_UdataSec       RAM=gpr3        // System Trace services.           
//
// User application variables may use end of bank 0 and everywhere else.
//
SECTION    NAME=UADC_UdataSec       RAM=gpr1        // User ADC routines.
SECTION    NAME=ULCD_UdataSec       RAM=gpr1        // User LCD routines.
SECTION    NAME=UI2C_UdataSec       RAM=gpr1        // User I2C routines.
SECTION    NAME=SM16_UdataSec       RAM=gpr2        // Fixed/Floating point library.
//
////////////////////////////////////////////////////////////////////////////////
//
// Place C object files and stack.
//
#IFDEF _CRUNTIME
  SECTION    NAME=CONFIG     ROM=config
//  #IFDEF _DEBUGSTACK						Criminy I have not found any docs on _DEBUGSTACK.
    STACK SIZE=0x100 RAM=gpr4
//  #ELSE
//    STACK SIZE=0x100 RAM=gpr5
//  #FI
#FI
